// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cadeira {
  id String @id @default(uuid())
  name String
  monitorias Monitoria[]
  cadeirasCadastradas CadeiraCadastrada[]
}

model CadeiraCadastrada {
  id String @id @default(uuid())
  cadeiraId String
  userId String
  @@map("cadeirasCadastradas")
  user User @relation(fields: [userId], references: [id])
  cadeira Cadeira @relation(fields: [cadeiraId], references: [id])

}
model User {
  id String @id @default(uuid())
  name String
  email String @unique
  password String
  isMonitor Boolean
  isProfessor Boolean
  avaliacaoPendente Boolean @default(false)
  ultimaAulaId String?
  ultimaAulaMonitor String?
  active Boolean @default(false)
  createdAt DateTime @default(now())
  cadeiras CadeiraCadastrada[]

  @@map("users")
  monitor Monitor?
  professor Professor?
}

model Professor {
  id String @id @unique
  token String @unique
  monitoresId String[] @default([])
  user User @relation(fields: [id],references: [id])
  @@map("professors")

}

model Monitor {
  id String @id
  tokenProfessor String
  idCadeira String
  nota Float @default(10)
  totalDeAvaliacoes Int @default(0)
  badges String?

  user User @relation(fields: [id],references: [id])

  @@map("monitors")

  monitorias Monitoria[]

}

model Monitoria{
  id String @id @default(uuid())
  idMonitor String
  idCadeira String
  cadeiraName String
  horarioInicio DateTime
  horarioFim DateTime
  alunosCadastrados Int @default(0)
  sala String
  obs String?
  idAlunos String[] @default([])
  @@map("monitorias")
  monitor Monitor @relation(fields: [idMonitor], references: [id])
  cadeira Cadeira @relation(fields: [idCadeira], references: [id])
  }